{"version":3,"sources":["components/Home/index.js","reducers/callersReducer/constants.js","middleware/apiMiddleware/constants.js","middleware/apiMiddleware/actions.js","constants.js","reducers/callerReducer/constants.js","components/Callers/CallersTable/CallerRow/index.js","reducers/callerReducer/actions.js","components/Callers/CallersTable/index.js","components/Callers/index.js","reducers/callersReducer/actions.js","components/Teams/index.js","reducers/teamsReducer/actions.js","reducers/teamsReducer/constants.js","components/NavBar/index.js","routes/index.js","components/App/index.js","reducers/callersReducer/index.js","reducers/callerReducer/index.js","reducers/index.js","middleware/apiMiddleware/index.js","configureStore.js","index.js"],"names":["Home","SET_CALLERS_ACTION","API_ACTION","createApiAction","options","type","payload","API_ADD","CALLERS_ADD","SET_CALLER_ACTION","CallerRow","extension","this","props","url","onSuccess","response","createSetCallerAction","data","onError","res","console","log","handle","id","name","caller","teamId","idTeam","TableRow","TableCell","component","scope","align","attempts","amountCalledNumbers","answeredAttempts","lt2min","gt2min","gt7min","toPercent","answeredRatio","gt2minRatio","gt7minRatio","gt2minToGt7minRatio","failedAttemptsRatio","totalCallsDuration","React","Component","number","Number","toFixed","mapsDispatchToProps","connect","state","useStyles","makeStyles","table","minWidTableCell","CallersTable","classes","callers","TableContainer","Paper","Table","className","size","aria-label","TableHead","TableBody","map","idx","Callers","createSetCallersAction","PureComponent","Teams","JSON","stringify","teams","createSetTeamsAction","NavBar","to","routes","exact","path","App","history","callersReducer","action","newState","callerReducer","rootReducer","combineReducers","router","connectRouter","apiMiddleware","store","next","method","params","_","noop","axios","then","catch","createBrowserHistory","preloadedState","composeEnhancer","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6914c4ab.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>Home is where the heart is</h1>\n        </div>\n    ); \n}\n\nexport default Home;","export const SET_CALLERS_ACTION = 'SET_CALLERS_ACTION';","export const API_ACTION = 'API_ACTION';\nexport const API_METHOD_GET = 'GET';\nexport const API_METHOD_POST = 'POST';\n\n","import { API_ACTION } from './constants'\n\nexport const createApiAction = options => ({\n    type: API_ACTION,\n    payload: options\n})","export const SERVER_ADD = 'http://localhost:3000';\nexport const API_ADD = `${SERVER_ADD}/api`;\nexport const CALLERS_ADD = `${API_ADD}/callers`;","export const SET_CALLER_ACTION = 'SET_CALLER_ACTION';","import React from 'react';\nimport { connect } from 'react-redux'\nimport { createSetCallerAction } from '../../../../reducers/callerReducer/actions'\nimport { createApiAction } from '../../../../middleware/apiMiddleware/actions'\nimport { CALLERS_ADD } from '../../../../constants';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass CallerRow extends React.Component {\n    componentDidMount() {\n        const { extension } = this.props;\n        this.props.createApiAction({\n            url: `${CALLERS_ADD}/calls/${extension}`,\n            // params: {id: 6},\n            onSuccess: response => {\n                this.props.createSetCallerAction(response.data);\n            },\n            onError: res => { console.log(res) }\n        });\n    }\n\n    render() {\n        const { id, handle, name, extension, teamId, idTeam } = this.props;\n        const { caller } = this.props;\n\n        return (\n            <TableRow key={extension}>\n                <TableCell component=\"th\" scope=\"extension\">{extension}</TableCell>\n                <TableCell align=\"right\">{name}</TableCell>\n                <TableCell align=\"right\">{handle}</TableCell>\n                <TableCell align=\"right\">{extension}</TableCell>\n                <TableCell align=\"right\">{caller.attempts}</TableCell>\n                <TableCell align=\"right\">{caller.amountCalledNumbers}</TableCell>\n                <TableCell align=\"right\">{caller.answeredAttempts}</TableCell>\n                <TableCell align=\"right\">{caller.lt2min}</TableCell>\n                <TableCell align=\"right\">{caller.gt2min}</TableCell>\n                <TableCell align=\"right\">{caller.gt7min}</TableCell>\n                <TableCell align=\"right\">{toPercent(caller.answeredRatio)}%</TableCell>\n                <TableCell align=\"right\">{toPercent(caller.gt2minRatio)}%</TableCell>\n                <TableCell align=\"right\">{toPercent(caller.gt7minRatio)}%</TableCell>\n                <TableCell align=\"right\">{toPercent(caller.gt2minToGt7minRatio)}%</TableCell>\n                <TableCell align=\"right\">{toPercent(caller.failedAttemptsRatio)}%</TableCell>\n                <TableCell align=\"right\">{toPercent(caller.totalCallsDuration)}%</TableCell>\n            </TableRow>\n        );\n    }\n}\nconst mapsStateToProps = state => ({\n    caller: state.caller\n})\n\nconst toPercent = number => {\n    return (Number(number)*100).toFixed(2);\n}\n\nconst mapsDispatchToProps = { createSetCallerAction, createApiAction };\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(CallerRow);","import { SET_CALLER_ACTION } from './constants'\n\nexport const createSetCallerAction = caller => ({\n    type: SET_CALLER_ACTION,\n    payload: caller\n})","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CallerRow from './CallerRow'\n\nconst useStyles = makeStyles({\n    table: {\n        minWidTableCell: 650,\n    },\n});\n\nconst CallersTable = props => {\n    const classes = useStyles();\n    const { callers } = props;\n    \n    return (\n        <TableContainer component={Paper}>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell align=\"right\">Team Leader</TableCell>\n                        <TableCell align=\"right\">Handle</TableCell>\n                        <TableCell align=\"right\">TL Extension</TableCell>\n                        <TableCell align=\"right\">Attempts</TableCell>\n                        <TableCell align=\"right\">Unique Called Numbers</TableCell>\n                        <TableCell align=\"right\">Answered (more than 20sec)</TableCell>\n                        <TableCell align=\"right\">less Than 2 mins</TableCell>\n                        <TableCell align=\"right\"> 2 mins (120 s)</TableCell>\n                        <TableCell align=\"right\"> 7 mins (420 s)</TableCell>\n                        <TableCell align=\"right\">% of answered</TableCell>\n                        <TableCell align=\"right\">% more TableCellan 2 mins</TableCell>\n                        <TableCell align=\"right\">% more TableCellan 7 mins</TableCell>\n                        <TableCell align=\"right\">Ratio 7m/2m</TableCell>\n                        <TableCell align=\"right\">% No Answer</TableCell>\n                        <TableCell align=\"right\">Total Call Duration</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {callers.map((caller, idx) => <CallerRow key={idx} {...caller} />)}\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default CallersTable;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createSetCallersAction } from '../../reducers/callersReducer/actions'\nimport { createApiAction } from '../../middleware/apiMiddleware/actions'\nimport { CALLERS_ADD } from '../../constants';\nimport CallersTable from './CallersTable'\n\nclass Callers extends React.PureComponent {\n    componentDidMount() {\n        this.props.createApiAction({\n            url: CALLERS_ADD,\n            // params: {id: 6},\n            onSuccess: response => {\n                this.props.createSetCallersAction(response.data);\n            },\n            onError: res => {console.log(res)}\n        });\n    }\n\n    render() {\n        const {callers} = this.props;\n\n        return (\n            <div>\n                <CallersTable callers={callers}/>\n                {/* {callers.map((caller, idx) => <Caller key={idx} {...caller} />)} */}\n            </div>\n        )\n    }\n}\n\nconst mapsStateToProps = state => ({\n    callers: state.callers\n})\n\nconst mapsDispatchToProps = { createSetCallersAction, createApiAction };\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Callers);","import { SET_CALLERS_ACTION } from './constants'\n\nexport const createSetCallersAction = callers => ({\n    type: SET_CALLERS_ACTION,\n    payload: callers\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createSetTeamsAction } from '../../reducers/teamsReducer/actions'\nimport { createApiAction } from '../../middleware/apiMiddleware/actions'\n\nclass Teams extends React.PureComponent {\n    componentDidMount() {\n        \n    }\n\n    render() {\n        return (\n            <div>\n                Teams()\n                {JSON.stringify(this.props.teams)}\n            </div>\n        )\n    }\n}\n\nconst mapsStateToProps = state => ({\n    teams: state.teams\n})\n\nconst mapsDispatchToProps = {createSetTeamsAction, createApiAction}\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Teams);","import { SET_TEAMS_ACTION } from './constants'\n\nexport const createSetTeamsAction = teams => ({\n    type: SET_TEAMS_ACTION,\n    payload: teams\n})","export const SET_TEAMS_ACTION = 'SET_TEAMS_ACTION';","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n    <div>\n        <div>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/callers\">Callers</Link>\n        </div>\n    </div>\n)\n\nexport default NavBar","import React from 'react'\nimport { Route, Switch } from 'react-router'\nimport Home from '../components/Home'\nimport Callers from '../components/Callers'\nimport Teams from '../components/Teams'\nimport NavBar from '../components/NavBar'\n\nconst routes = (\n  <div>\n    <NavBar />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/callers\" component={Callers} />\n      <Route path=\"/teams\" component={Teams} />\n    </Switch>\n  </div>\n)\n\nexport default routes","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ConnectedRouter } from 'connected-react-router'\nimport routes from '../../routes'\n\nconst App = ({ history }) => {\n  return (\n    <ConnectedRouter history={history}>\n      {routes}\n    </ConnectedRouter>\n  )\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n}\n\nexport default App","import { SET_CALLERS_ACTION } from './constants'\n\nconst callersReducer = (state = [], action) => {\n    let newState = state;\n    \n    switch (action.type) {\n        case SET_CALLERS_ACTION:\n            newState = [...action.payload];\n            break;\n    }\n    \n    return newState;\n}\n\nexport default callersReducer;","import { SET_CALLER_ACTION } from './constants'\n\nconst callerReducer = (state = [], action) => {\n    let newState = state;\n    \n    switch (action.type) {\n        case SET_CALLER_ACTION:\n            newState = action.payload;\n            break;\n    }\n    \n    return newState;\n}\n\nexport default callerReducer;","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport callersReducer from './callersReducer'\nimport callerReducer from './callerReducer'\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    callers: callersReducer,\n    caller: callerReducer\n})\n\nexport default rootReducer","import { API_ACTION, API_METHOD_GET } from './constants'\nimport _ from 'lodash'\nimport axios from 'axios'\n\nconst apiMiddleware = store => next => action => {\n    if (action.type === API_ACTION) {\n        const { method = API_METHOD_GET, url, data, params, onSuccess = _.noop, onError = _.noop } = action.payload;\n\n        axios({\n            method,\n            url,\n            data,\n            params\n        }).then(onSuccess).catch(onError);\n    }\n    else {\n        next(action);\n    }\n};\n\nexport default apiMiddleware;","import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './reducers'\nimport apiMiddleware from './middleware/apiMiddleware';\n\nexport const history = createBrowserHistory()\n\nexport default function configureStore(preloadedState) {\n    const composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose\n    const store = createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeEnhancer(\n            applyMiddleware(\n                apiMiddleware,\n                routerMiddleware(history),\n            ),\n        ),\n    )\n\n    // Hot reloading\n    if (module.hot) {\n        // Enable Webpack hot module replacement for reducers\n        module.hot.accept('./reducers', () => {\n            store.replaceReducer(createRootReducer(history));\n        });\n    }\n\n    return store\n}","import { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport configureStore, { history } from './configureStore'\n\nconst store = configureStore()\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App history={history} />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\n\n// Hot reloading\nif (module.hot) {\n  // Reload components\n  module.hot.accept('./components/App', () => {\n    render()\n  })\n}"],"sourceRoot":""}