{"version":3,"sources":["components/App/navbar.js","api/caller.js","components/App/report.js","components/App/index.js","api/callersSlice.js","store.js","index.js"],"names":["Navbar","href","Caller","caller","prop","hasOwnProperty","this","calls","length","props","answered","answeredNumbers","answeredNumberes","Set","getAnswered","map","call","dst","attemptedNumbers","getCalledNumbers","size","filter","disposition","billsec","getAttemptsAmount","getAnsweredAmount","min","reduce","acc","Callers","callers","window","clientData","CallerRow","id","team","name","leader","extension","getCalledNumbersAmount","getCallsShorterThanAmount","getCallsLongerThanAmount","Math","round","getNoAnswerAmount","getTotalCallDuration","Report","App","className","exact","path","render","Fragment","to","postsSlice","createSlice","initialState","title","content","reducers","configureStore","reducer","callersReducer","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.26295280.chunk.js","sourcesContent":["function Navbar() {\n    return (\n        <table>\n            <tr>\n                <td><a href='teamlist.php'>Teams</a></td>\n                <td><a href='stafflist.php'>Staff</a></td>\n                <td><a href='report.php'>Report</a></td>\n                <td><a href='report_avg.php'>Report_Average</a></td>\n                <td><a href='report_dash.php'>Dashboard</a></td>\n                <td><a href='gauges_list_dashboard.php'>Dashboard settings</a></td>\n                <td><a href='help.html'>Help</a></td>\n            </tr>\n        </table>\n  );\n}\n\n  export default Navbar;","class Caller {\n    constructor(caller) {\n        for (var prop in caller) {\n            if (caller.hasOwnProperty(prop)) {\n                this[prop] = caller[prop];\n            }\n        }\n    }\n\n    getAttemptsAmount() {\n        return this.calls.length;\n    }\n\n    getCalledNumbers(props) {\n        let answered = false;\n        let calls = this.calls;\n        if (typeof props != \"undefined\") {\n            if (props.answered) {\n                answered = true;\n            }\n        }\n\n        if(answered && !this.answeredNumbers)\n            this.answeredNumberes = new Set(this.getAnswered().map(call => call.dst));\n        if(!answered && !this.attemptedNumbers)\n            this.attemptedNumbers = new Set(this.calls.map(call => call.dst));\n\n        let calledNumbers = answered? this.answeredNumbers : this.attemptedNumbers;\n        return calledNumbers;\n    }\n\n    getCalledNumbersAmount(props) {\n        return this.getCalledNumbers().size;\n    }\n\n    getAnswered() {\n        if (!this.answered)\n            this.answered = this.calls.filter(call => (call.disposition === \"ANSWERED\" && call.billsec >= 20));\n        return this.answered\n    }\n\n    getAnsweredAmount() {\n        return this.getAnswered().length;\n    }\n\n    getNoAnswerAmount() {\n            return (this.getAttemptsAmount() - this.getAnsweredAmount());\n    }\n\n    getCallsLongerThanAmount(min) {\n        let answered = this.getAnswered();\n\n        return answered.filter(answered => answered.billsec > min * 60).length;\n    }\n\n    getCallsShorterThanAmount(min) {\n        let answered = this.getAnswered();\n\n        return answered.filter(answered => answered.billsec <= min * 60).length;\n    }\n\n    getTotalCallDuration() {\n        return this.calls.reduce((acc, call) => acc + call.billsec, 0);\n    }\n}\n\nexport default Caller;","import Caller from '../../api/caller';\n\nfunction Report() {\n    return (\n        <table>\n            <tr>\n                <th>Team Name</th>\n                <th>Team Leader</th>\n                <th>TL Extension</th>\n                <th>Attempts</th>\n                <th>Unique Called Numbers</th>\n                <th>Answered</th>\n                <th>less than 2 mins</th>\n                <th> 2 mins (120 s)</th>\n                <th> 7 mins (420 s)</th>\n                <th>Unique Called Numbers (answered, more than 20 sec)</th>\n                <th>% of answered</th>\n                <th>% more than 2 mins</th>\n                <th>% more than 7 mins</th>\n                <th>Ratio 7m/2m</th>\n                <th>% No Answer</th>\n                <th>Total Call Duration</th>\n            </tr>\n            <Callers />\n        </table>\n    );\n};\n\nfunction Callers(props) {\n    const callers = window.clientData.callers;\n\n    return (\n        <tbody>\n            {callers.map((caller) =>\n                <CallerRow key={caller.id} caller={caller} />\n            )}\n        </tbody>\n    );\n};\n\nfunction CallerRow(props) {\n    const caller = new Caller(props.caller);\n\n    return (\n        <tr>\n            {/*Team Name*/}\n            <td>\n                {caller.team.name}\n            </td>\n            {/*Team Leader*/}\n            <td>\n                {caller.team.leader}\n            </td>\n            {/*TL extension*/}\n            <td>\n                {caller.extension}\n            </td>\n            {/*Attempts */}\n            <td>\n                {caller.getAttemptsAmount()}\n            </td>\n            {/*Unique Called Numbers */}\n            <td>\n                {caller.getCalledNumbersAmount()}\n            </td>\n            {/*Answered */}\n            <td>\n                {caller.getAnsweredAmount()}\n            </td>\n            {/*less than 2 mins */}\n            <td>\n                {caller.getCallsShorterThanAmount(2)}\n            </td>\n            {/*2 mins */}\n            <td>\n                {caller.getCallsLongerThanAmount(2)}\n            </td>\n            {/*7 mins */}\n            <td>\n                {caller.getCallsLongerThanAmount(7)}\n            </td>\n            {/* Unique Called Numbers (answered, more than 20 sec) */}\n            <td>\n                {caller.getCalledNumbersAmount({ 'answered': true })}\n            </td>\n            {/*% of answered*/}\n            <td>\n                {Math.round((caller.getAnsweredAmount() / caller.getAttemptsAmount()) * 100)}%\n            </td>\n            {/*% more than 2 mins*/}\n            <td>\n                {Math.round((caller.getCallsLongerThanAmount(2) / caller.getAttemptsAmount()) * 100)}%\n            </td>\n            {/*% more than 7 mins */}\n            <td>\n                {Math.round((caller.getCallsLongerThanAmount(7) / caller.getAttemptsAmount()) * 100)}%\n            </td>\n            {/*Ratio 7m/2m */}\n            <td>\n                {Math.round((caller.getCallsLongerThanAmount(2) / caller.getCallsLongerThanAmount(7)) * 100)}%\n            </td>\n            {/*% No Answer */}\n            <td>\n                {Math.round((caller.getNoAnswerAmount() / caller.getAttemptsAmount()) * 100)}%\n            </td>\n            {/*Total Call Duration */}\n            <td>\n                {caller.getTotalCallDuration()}\n            </td>\n        </tr>\n    )\n}\n\nexport default Report;","import './index.scss';\nimport Navbar from './navbar';\nimport Report from './report';\nimport { CallerDateForm } from './callerDateFilter';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <React.Fragment>\n                <h1>AdvCDR</h1>\n                <Report />\n                {/* <CallerDateForm /> */}\n              </React.Fragment>\n            )}\n          />\n          <Route\n            exact\n            path=\"/teams\"\n            render={() => (\n              <React.Fragment>\n                <h1>Teams</h1>\n              </React.Fragment>\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = [\n  { id: '1', title: 'First Post!', content: 'Hello!' },\n  { id: '2', title: 'Second Post', content: 'More text' }\n]\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {}\n})\n\nexport default postsSlice.reducer","import { configureStore } from '@reduxjs/toolkit'\n\nimport callersReducer from './api/callersSlice'\n\nexport default configureStore({\n  reducer: {\n    callers: callersReducer\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport store from './store';\nimport {Provider} from 'react-redux';\n\n// do everything in App, don't touch index\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}