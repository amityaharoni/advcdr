{"version":3,"sources":["components/Home/index.js","reducers/callersReducer/constants.js","middleware/apiMiddleware/constants.js","middleware/apiMiddleware/actions.js","constants.js","components/Callers/Caller/index.js","components/Callers/index.js","reducers/callersReducer/actions.js","components/Teams/index.js","reducers/teamsReducer/actions.js","reducers/teamsReducer/constants.js","components/NavBar/index.js","routes/index.js","components/App/index.js","reducers/callersReducer/index.js","reducers/index.js","middleware/apiMiddleware/index.js","configureStore.js","index.js"],"names":["Home","SET_CALLERS_ACTION","API_ACTION","createApiAction","options","type","payload","API_ADD","CALLERS_ADD","Caller","props","attempts","id","handle","name","extenstion","teamId","idTeam","className","JSON","stringify","Callers","console","log","this","callers","url","onSuccess","response","data","createSetCallersAction","map","caller","idx","React","PureComponent","mapsDispatchToProps","connect","state","Teams","teams","createSetTeamsAction","NavBar","to","routes","exact","path","component","App","history","callersReducer","action","newState","rootReducer","combineReducers","router","connectRouter","apiMiddleware","store","next","method","params","_","noop","onError","axios","then","catch","createBrowserHistory","preloadedState","composeEnhancer","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","configureStore","ReactDOM","render","document","getElementById"],"mappings":"2KAUeA,EARF,WACT,OACI,8BACI,+D,wCCLCC,EAAqB,qBCArBC,EAAa,aCEbC,EAAkB,SAAAC,GAAO,MAAK,CACvCC,KAAMH,EACNI,QAASF,ICHAG,EAAO,UADM,wBACN,QACPC,EAAW,UAAMD,EAAN,YCmBTE,EAnBA,SAAAC,GAAU,IACdC,EAA0DD,EAA1DC,SAAUC,EAAgDF,EAAhDE,GAAIC,EAA4CH,EAA5CG,OAAQC,EAAoCJ,EAApCI,KAAMC,EAA8BL,EAA9BK,WAAYC,EAAkBN,EAAlBM,OAAQC,EAAUP,EAAVO,OAEvD,OACI,qBAAKC,UAAU,SAAf,SACI,+BACI,4CAAeC,KAAKC,UAAUT,MAC9B,sCAASC,KACT,0CAAaC,KACb,wCAAWC,KACX,8CAAiBC,KACjB,0CAAaC,KACb,0CAAaC,WCPvBI,E,uKACF,WAAqB,IAAD,OAChBC,QAAQC,IAAI,GACPC,KAAKd,MAAMe,SACZD,KAAKd,MAAMP,gBAAgB,CACvBuB,IAAKlB,EAELmB,UAAW,SAAAC,GACPN,QAAQC,IAAIK,EAASC,MACrB,EAAKnB,MAAMoB,uBAAuBF,EAASC,W,oBAM3D,WAAU,IACCJ,EAAWD,KAAKd,MAAhBe,QAEP,OACI,8BACKA,EAAQM,KAAI,SAACC,EAAQC,GAAT,OAAiB,cAAC,EAAD,eAAsBD,GAATC,Y,GApBrCC,IAAMC,eA8BtBC,EAAsB,CAACN,uBCnCS,SAAAL,GAAO,MAAK,CAC9CpB,KAAMJ,EACNK,QAASmB,IDiCwCtB,mBAEtCkC,eANU,SAAAC,GAAK,MAAK,CAC/Bb,QAASa,EAAMb,WAKsBW,EAA1BC,CAA+ChB,GElCxDkB,E,uKACF,c,oBAIA,WACI,OACI,0CAEKpB,KAAKC,UAAUI,KAAKd,MAAM8B,c,GATvBN,IAAMC,eAmBpBC,EAAsB,CAACK,qBCtBO,SAAAD,GAAK,MAAK,CAC1CnC,KCH4B,mBDI5BC,QAASkC,IDoBsCrC,mBAEpCkC,eANU,SAAAC,GAAK,MAAK,CAC/BE,MAAOF,EAAME,SAKwBJ,EAA1BC,CAA+CE,G,QGd/CG,EATA,kBACX,8BACI,gCACI,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,2BCWGC,EAVb,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/C,IACjC,cAAC,IAAD,CAAO8C,KAAK,WAAWC,UAAW1B,IAClC,cAAC,IAAD,CAAOyB,KAAK,SAASC,UAAWR,UCIvBS,EAZH,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACb,OACE,cAAC,IAAD,CAAiBA,QAASA,EAA1B,SACGL,K,+BCMQM,EAZQ,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIa,EAAW,uCACvCC,EAAWd,EAEf,OAAQa,EAAO9C,MACX,KAAKJ,EACDmD,EAAQ,YAAOD,EAAO7C,SAI9B,OAAO8C,GCFIC,EALK,SAACJ,GAAD,OAAaK,YAAgB,CAC7CC,OAAQC,YAAcP,GACtBxB,QAASyB,K,kCCcEO,EAhBO,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAR,GACnC,GAAIA,EAAO9C,OAASH,EAAY,CAAC,IAAD,EACiEiD,EAAO7C,QADxE,IACpBsD,cADoB,MdJN,McIM,EACKlC,EADL,EACKA,IAAKG,EADV,EACUA,KAAMgC,EADhB,EACgBA,OADhB,IACwBlC,iBADxB,MACoCmC,IAAEC,KADtC,MAC4CC,eAD5C,MACsDF,IAAEC,KADxD,EAG5BE,IAAM,CACFL,SACAlC,MACAG,OACAgC,WACDK,KAAKvC,GAAWwC,MAAMH,QAGzBL,EAAKR,MCVAF,EAAUmB,cCAvB,IAAMV,EDES,SAAwBW,GACnC,IAAMC,EAAkBC,OAAOC,oCAAsCC,IAoBrE,OAnBcC,YACVC,EAAkB1B,GAClBoB,EACAC,EACIM,YACInB,EACAoB,YAAiB5B,MCVnB6B,GAEZC,IAASC,OACP,cAAC,IAAD,CAAUtB,MAAOA,EAAjB,SACE,cAAC,EAAD,CAAKT,QAASA,MAEhBgC,SAASC,eAAe,W","file":"static/js/main.54d4f133.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n    return (\n        <div>\n            <h1>Home is where the heart is</h1>\n        </div>\n    ); \n}\n\nexport default Home;","export const SET_CALLERS_ACTION = 'SET_CALLERS_ACTION';","export const API_ACTION = 'API_ACTION';\nexport const API_METHOD_GET = 'GET';\nexport const API_METHOD_POST = 'POST';\n\n","import { API_ACTION } from './constants'\n\nexport const createApiAction = options => ({\n    type: API_ACTION,\n    payload: options\n})","export const SERVER_ADD = 'http://localhost:3000';\nexport const API_ADD = `${SERVER_ADD}/api`;\nexport const CALLERS_ADD = `${API_ADD}/callers`;","import React from 'react';\n\nconst Caller = props => {\n    const {attempts, id, handle, name, extenstion, teamId, idTeam} = props;\n    \n    return (\n        <div className='caller'>\n            <ul>\n                <li>attempts: {JSON.stringify(attempts)}</li>\n                <li>id: {id}</li>\n                <li>handle: {handle}</li>\n                <li>name: {name}</li>\n                <li>extenstion: {extenstion}</li>\n                <li>teamId: {teamId}</li>\n                <li>idTeam: {idTeam}</li>\n            </ul>\n        </div>\n    );\n\n};\n\nexport default Caller;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createSetCallersAction } from '../../reducers/callersReducer/actions'\nimport { createApiAction } from '../../middleware/apiMiddleware/actions'\nimport { CALLERS_ADD } from '../../constants';\nimport Caller from './Caller';\n\nclass Callers extends React.PureComponent {\n    componentDidMount() {\n        console.log(2);\n        if (!this.props.callers) {\n            this.props.createApiAction({ \n                url: CALLERS_ADD, \n                // params: {id: 6},\n                onSuccess: response => {\n                    console.log(response.data)\n                    this.props.createSetCallersAction(response.data);\n                }\n            });\n        }\n    }\n\n    render() {\n        const {callers} = this.props;\n\n        return (\n            <div>\n                {callers.map((caller, idx) => <Caller key={idx} {...caller} />)}\n            </div>\n        )\n    }\n}\n\nconst mapsStateToProps = state => ({\n    callers: state.callers\n})\n\nconst mapsDispatchToProps = {createSetCallersAction, createApiAction};\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Callers);","import { SET_CALLERS_ACTION } from './constants'\n\nexport const createSetCallersAction = callers => ({\n    type: SET_CALLERS_ACTION,\n    payload: callers\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createSetTeamsAction } from '../../reducers/teamsReducer/actions'\nimport { createApiAction } from '../../middleware/apiMiddleware/actions'\n\nclass Teams extends React.PureComponent {\n    componentDidMount() {\n        \n    }\n\n    render() {\n        return (\n            <div>\n                Teams()\n                {JSON.stringify(this.props.teams)}\n            </div>\n        )\n    }\n}\n\nconst mapsStateToProps = state => ({\n    teams: state.teams\n})\n\nconst mapsDispatchToProps = {createSetTeamsAction, createApiAction}\n\nexport default connect(mapsStateToProps, mapsDispatchToProps)(Teams);","import { SET_TEAMS_ACTION } from './constants'\n\nexport const createSetTeamsAction = teams => ({\n    type: SET_TEAMS_ACTION,\n    payload: teams\n})","export const SET_TEAMS_ACTION = 'SET_TEAMS_ACTION';","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n    <div>\n        <div>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/callers\">Callers</Link>\n        </div>\n    </div>\n)\n\nexport default NavBar","import React from 'react'\nimport { Route, Switch } from 'react-router'\nimport Home from '../components/Home'\nimport Callers from '../components/Callers'\nimport Teams from '../components/Teams'\nimport NavBar from '../components/NavBar'\n\nconst routes = (\n  <div>\n    <NavBar />\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/callers\" component={Callers} />\n      <Route path=\"/teams\" component={Teams} />\n    </Switch>\n  </div>\n)\n\nexport default routes","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ConnectedRouter } from 'connected-react-router'\nimport routes from '../../routes'\n\nconst App = ({ history }) => {\n  return (\n    <ConnectedRouter history={history}>\n      {routes}\n    </ConnectedRouter>\n  )\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n}\n\nexport default App","import { SET_CALLERS_ACTION } from './constants'\n\nconst callersReducer = (state = [], action) => {\n    let newState = state;\n    \n    switch (action.type) {\n        case SET_CALLERS_ACTION:\n            newState = [...action.payload];\n            break;\n    }\n    \n    return newState;\n}\n\nexport default callersReducer;","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport callersReducer from './callersReducer'\n\nconst rootReducer = (history) => combineReducers({\n    router: connectRouter(history),\n    callers: callersReducer\n})\n\nexport default rootReducer","import { API_ACTION, API_METHOD_GET } from './constants'\nimport _ from 'lodash'\nimport axios from 'axios'\n\nconst apiMiddleware = store => next => action => {\n    if (action.type === API_ACTION) {\n        const { method = API_METHOD_GET, url, data, params, onSuccess = _.noop, onError = _.noop } = action.payload;\n\n        axios({\n            method,\n            url,\n            data,\n            params\n        }).then(onSuccess).catch(onError);\n    }\n    else {\n        next(action);\n    }\n};\n\nexport default apiMiddleware;","import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './reducers'\nimport apiMiddleware from './middleware/apiMiddleware';\n\nexport const history = createBrowserHistory()\n\nexport default function configureStore(preloadedState) {\n    const composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose\n    const store = createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeEnhancer(\n            applyMiddleware(\n                apiMiddleware,\n                routerMiddleware(history),\n            ),\n        ),\n    )\n\n    // Hot reloading\n    if (module.hot) {\n        // Enable Webpack hot module replacement for reducers\n        module.hot.accept('./reducers', () => {\n            store.replaceReducer(createRootReducer(history));\n        });\n    }\n\n    return store\n}","import { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport configureStore, { history } from './configureStore'\n\nconst store = configureStore()\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App history={history} />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\n\n// Hot reloading\nif (module.hot) {\n  // Reload components\n  module.hot.accept('./components/App', () => {\n    render()\n  })\n}"],"sourceRoot":""}