{"version":3,"sources":["components/Callers/index.js","components/NavBar/index.js","routes/index.js","components/App/index.js","reducers/index.js","configureStore.js","index.js"],"names":["Callers","NavBar","to","routes","path","component","App","history","rootReducers","combineReducers","router","connectRouter","createBrowserHistory","store","preloadedState","composeEnhancer","window","_REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","createStore","createRootReducer","applyMiddleware","routerMiddleware","configureStore","ReactDOM","render","document","getElementById"],"mappings":"kKAUeA,EARC,WACZ,OACI,8BACI,4C,QCMGC,EARA,kBACX,8BACI,8BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,uBCSGC,EATb,gCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWL,IAC3B,cAAC,IAAD,CAAOI,KAAK,WAAWC,UAAWL,UCOzBM,EAZH,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACb,OACE,cAAC,IAAD,CAAiBA,QAASA,EAA1B,SACGJ,K,uBCDQK,EAJM,SAACD,GAAD,OAAaE,YAAgB,CAC9CC,OAAQC,YAAcJ,MCCbA,EAAUK,cCCvB,IAAMC,EDCS,SAAwBC,GACnC,IAAMC,EAAkBC,OAAOC,oCAAsCC,IAmBrE,OAlBcC,YACVC,EAAkBb,GAClBO,EACAC,EACIM,YACIC,YAAiBf,MCRnBgB,GAEZC,IAASC,OACP,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACE,cAAC,EAAD,CAAKN,QAASA,MAEhBmB,SAASC,eAAe,iB","file":"static/js/main.ca1bab34.chunk.js","sourcesContent":["import React from 'react'\n\nconst Callers = () => {\n    return (\n        <div>\n            <h1>Callers</h1>\n        </div>\n    ); \n}\n\nexport default Callers;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n    <div>\n        <div>\n            <Link to=\"/\">Home</Link>\n        </div>\n    </div>\n)\n\nexport default NavBar","import React from 'react'\nimport { Route, Switch } from 'react-router'\nimport Callers from '../components/Callers'\nimport NavBar from '../components/NavBar'\n\nconst routes = (\n  <div>\n    <NavBar />\n    <Switch>\n      <Route path=\"/\" component={Callers} />\n      <Route path=\"/callers\" component={Callers} />\n    </Switch>\n  </div>\n)\n\nexport default routes","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { ConnectedRouter } from 'connected-react-router'\nimport routes from '../../routes'\n\nconst App = ({ history }) => {\n  return (\n    <ConnectedRouter history={history}>\n      {routes}\n    </ConnectedRouter>\n  )\n}\n\nApp.propTypes = {\n  history: PropTypes.object,\n}\n\nexport default App","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nconst rootReducers = (history) => combineReducers({\n    router: connectRouter(history)\n})\n\nexport default rootReducers","import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\nimport createRootReducer from './reducers'\n\nexport const history = createBrowserHistory()\n\nexport default function configureStore(preloadedState) {\n    const composeEnhancer = window._REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose\n    const store = createStore(\n        createRootReducer(history),\n        preloadedState,\n        composeEnhancer(\n            applyMiddleware(\n                routerMiddleware(history),\n            ),\n        ),\n    )\n\n    // Hot reloading\n    if (module.hot) {\n        // Enable Webpack hot module replacement for reducers\n        module.hot.accept('./reducers', () => {\n            store.replaceReducer(createRootReducer(history));\n        });\n    }\n\n    return store\n}","import { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport configureStore, { history } from './configureStore'\n\nconst store = configureStore()\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App history={history} />\n    </Provider>,\n    document.getElementById('react-root')\n  )\n}\n\nrender()\n\n// Hot reloading\nif (module.hot) {\n  // Reload components\n  module.hot.accept('./App', () => {\n    render()\n  })\n}"],"sourceRoot":""}